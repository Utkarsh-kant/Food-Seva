// Generated by view binder compiler. Do not edit!
package com.utkarsh.foodseva.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.utkarsh.foodseva.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DonateItemsListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardViewFood;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageView imgFoodType;

  @NonNull
  public final TextView location;

  @NonNull
  public final TextView phoneNo;

  @NonNull
  public final TextView txtFoodType;

  @NonNull
  public final TextView txtMealType;

  @NonNull
  public final EditText txtPhoneNo;

  @NonNull
  public final TextView txtServingQuantity;

  @NonNull
  public final EditText txtUserLocation;

  @NonNull
  public final EditText txtUserName;

  private DonateItemsListBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardViewFood, @NonNull TextView date,
      @NonNull ImageView imgFoodType, @NonNull TextView location, @NonNull TextView phoneNo,
      @NonNull TextView txtFoodType, @NonNull TextView txtMealType, @NonNull EditText txtPhoneNo,
      @NonNull TextView txtServingQuantity, @NonNull EditText txtUserLocation,
      @NonNull EditText txtUserName) {
    this.rootView = rootView;
    this.cardViewFood = cardViewFood;
    this.date = date;
    this.imgFoodType = imgFoodType;
    this.location = location;
    this.phoneNo = phoneNo;
    this.txtFoodType = txtFoodType;
    this.txtMealType = txtMealType;
    this.txtPhoneNo = txtPhoneNo;
    this.txtServingQuantity = txtServingQuantity;
    this.txtUserLocation = txtUserLocation;
    this.txtUserName = txtUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DonateItemsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DonateItemsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.donate_items_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DonateItemsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView_food;
      MaterialCardView cardViewFood = ViewBindings.findChildViewById(rootView, id);
      if (cardViewFood == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.img_food_type;
      ImageView imgFoodType = ViewBindings.findChildViewById(rootView, id);
      if (imgFoodType == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.phoneNo;
      TextView phoneNo = ViewBindings.findChildViewById(rootView, id);
      if (phoneNo == null) {
        break missingId;
      }

      id = R.id.txt_food_type;
      TextView txtFoodType = ViewBindings.findChildViewById(rootView, id);
      if (txtFoodType == null) {
        break missingId;
      }

      id = R.id.txt_meal_type;
      TextView txtMealType = ViewBindings.findChildViewById(rootView, id);
      if (txtMealType == null) {
        break missingId;
      }

      id = R.id.txt_phoneNo;
      EditText txtPhoneNo = ViewBindings.findChildViewById(rootView, id);
      if (txtPhoneNo == null) {
        break missingId;
      }

      id = R.id.txt_serving_quantity;
      TextView txtServingQuantity = ViewBindings.findChildViewById(rootView, id);
      if (txtServingQuantity == null) {
        break missingId;
      }

      id = R.id.txt_user_location;
      EditText txtUserLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtUserLocation == null) {
        break missingId;
      }

      id = R.id.txt_user_name;
      EditText txtUserName = ViewBindings.findChildViewById(rootView, id);
      if (txtUserName == null) {
        break missingId;
      }

      return new DonateItemsListBinding((ConstraintLayout) rootView, cardViewFood, date,
          imgFoodType, location, phoneNo, txtFoodType, txtMealType, txtPhoneNo, txtServingQuantity,
          txtUserLocation, txtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
